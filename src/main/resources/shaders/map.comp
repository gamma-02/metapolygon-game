#version 430

// https://softwareengineering.stackexchange.com/q/328019
#define PI 3.1415926538







float atan2(float x, float y) {
    return atan(x / 2, y / 2);
}

// https://www.desmos.com/calculator/ov9odkqnry
float polygon(float x, float y, float centerX, float centerY, float scaleX, float scaleY, float sides) {
    x -= centerX;
    y -= centerY;
    x *= scaleX;
    y *= scaleY;

    // luigi: somehow I got this on my first try
    return pow(max(0,
        (1 / cos(PI / sides)) *
        cos(abs(
            ((2 * PI) / sides) *
            floor(sides / (2 * PI) * atan2(y, x)) +
            (PI / sides) -
            atan2(y, x)
        )) *
        sqrt(x * x + y * y)
    ), -1);
}

float polygon(float x, float y, float centerX, float centerY, float sides) {
    return polygon(x, y, centerX, centerY, 1.0, 1.0, sides);
}

float circle(float x, float y, float centerX, float centerY, float scaleX, float scaleY) {
    x -= centerX;
    y -= centerY;
    x *= scaleX;
    y *= scaleY;

    // luigi: this however, took me like 3 tries
    // I forgot the "1 / "
    return 1 / sqrt(
        (x * x) +
        (y * y)
    );
}

float circle(float x, float y, float centerX, float centerY) {
    return circle(x, y, centerX, centerY, 1.0, 1.0);
}

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(r32f, binding = 0) uniform image2D out_tex;

// I have the empty lines above because I'm not used to looking at text above like half way down my screen
void main() {
    // get position to read/write data from
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);// get value stored in the image
    ivec2 posPixel = ivec2((gl_GlobalInvocationID.xy - vec2(1024, 1024 /* just a bit of safety, probably unecessary */)) * vec2(10, -10));// get value stored in the image
    float in_val = imageLoad(out_tex, pos).r;// store new value in image

    float m = -2990;
    float v = -2120;

    float c = 100;
    float n = 790;

    float d = 1150;
    float r = 420;

    float p = 2880;
    float z = 3460;

    float u = -3750;
    float i = 2110;

    float q = 2810;
    float k = -1220;

    imageStore(out_tex, pos, vec4(1, 0, 0.0, 1));
    if (
        ((((polygon(posPixel.x,posPixel.y,c,v,3)+polygon(posPixel.x,posPixel.y,p,z,5)+polygon(posPixel.x,posPixel.y,u,i,5)+polygon(q,k,d,r,5)))/5)/
        (polygon(posPixel.x,posPixel.y,m,n,6)+circle(posPixel.x,posPixel.y,d,r)))
        >=0.5
    ) {
        imageStore(out_tex, pos, vec4(0, 0, 0.0, 1));
    }
}
